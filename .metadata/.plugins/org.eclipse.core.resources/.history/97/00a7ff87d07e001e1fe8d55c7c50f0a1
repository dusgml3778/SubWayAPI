package com.app.navi.editor;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.simple.JSONArray;
import org.springframework.stereotype.Service;

import com.app.navi.dto.StationInfo;

@Service
public class DataEditor {

	public void shortDistance (JSONArray arr) {
		
		int shortDistance;
		ArrayList<StationInfo> list = new ArrayList<StationInfo>();
		for(int i = 0;i<arr.size();i++) {
		 HashMap<String, String> map = (HashMap<String, String>) arr.get(i);
		 // 駅名と距離を格納
		 list.add(new StationInfo(map.get("name"), map.get("distance")));
		}
		// 距離チェック
		int num = this.checkDistance(list);
		System.out.println(num);
	}
	
	private int checkDistance(ArrayList<StationInfo> list) {

		int shortDistance = 0;
		String distance_str = "";
		int distance_num = 0;
		int index = 0;
		for (int i = 0; i < list.size(); i++) {
			// ex) 1000m -> 1000
			distance_str = list.get(i).getDistance().substring(0, list.get(i).getDistance().length() - 1);
			distance_num = Integer.parseInt(distance_str);
			// 1km以内
			if (distance_num <= 1000) {
				// 初回の判定時
				if (shortDistance == 0) {
					// 最寄り駅にする。
					shortDistance = distance_num;
					index = i;
				} else {
					if (shortDistance > distance_num) {
						// 比較してもっと短い距離を最寄り駅にする。
						shortDistance = distance_num;
						index = i;
					}
				}
			// 1km以上
			} else {
				// 初回の判定時
				if (shortDistance == 0) {
					// 最寄り駅にする。
					shortDistance = distance_num;
					index = i;
				} else {
					if (shortDistance > distance_num) {
						// 比較してもっと短い距離を最寄り駅にする。
						shortDistance = distance_num;
						index = i;
					}
				}
			}
		}
		
		System.out.println(list.get(index).getStationName());
		return shortDistance;
	}
}
