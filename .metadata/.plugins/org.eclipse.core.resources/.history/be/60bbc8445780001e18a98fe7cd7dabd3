package com.app.navi;

import java.util.ArrayList;
import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.app.navi.api.latilongtiAPI;
import com.app.navi.api.stationApi;
import com.app.navi.api.ticketAPI;
import com.app.navi.api.walkApi;
import com.app.navi.dto.LatitudeLongitude;
import com.app.navi.dto.StationInfo;
import com.app.navi.dto.TicketInfo;
import com.app.navi.dto.WalkInfo;
import com.app.navi.editor.DataEditor;
import com.app.navi.editor.JsonEditor;

/**
 * Handles requests for the application home page.
 */
@Controller
public class ApiController {

	@Autowired
	latilongtiAPI latilongapi;
	@Autowired
	stationApi stationApi;
	@Autowired
	walkApi walkapi;
	@Autowired
	ticketAPI ticketapi;
	@Autowired
	JsonEditor jsonEditor;
	@Autowired
	DataEditor dataEditor;

	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {

		return "home";
	}

	@RequestMapping(value = "/search", method = RequestMethod.POST)
	public String Send(@RequestParam String departure, @RequestParam String destination, Model model) {

		Double longitude0 = 0.0;
		Double latitude0 = 0.0;
		Double longitude1 = 0.0;
		Double latitude1 = 0.0;

		try {

			// 出発の軽度緯度情報取得
			String defartureInfo = latilongapi.sendURL(departure);
			// 到着の軽度緯度情報取得
			String destinationlatilongInfo = latilongapi.sendURL(destination);

			// 軽度緯度情報を加工
			ArrayList<LatitudeLongitude> list0 = jsonEditor.editJsonData(defartureInfo, "geometry", "coordinates");
			ArrayList<LatitudeLongitude> list1 = jsonEditor.editJsonData(destinationlatilongInfo, "geometry",
					"coordinates");

			if (!list0.isEmpty() && !list1.isEmpty()) {

				// 出発の軽度緯度を取得
				longitude0 = list0.get(0).getLongitude();
				latitude0 = list0.get(0).getLatitude();

				// 到着の軽度緯度を取得
				longitude1 = list1.get(0).getLongitude();
				latitude1 = list1.get(0).getLatitude();

				// 駅情報を取得
				String stationInfo0 = stationApi.sendURL(longitude0, latitude0);
				String stationInfo1 = stationApi.sendURL(longitude1, latitude1);

				if (!stationInfo0.isEmpty() && !stationInfo1.isEmpty()) {

					// 駅情報を加工
					ArrayList<StationInfo> Info0 = jsonEditor.editJsonData1(stationInfo0);
					ArrayList<StationInfo> Info1 = jsonEditor.editJsonData1(stationInfo1);

					if (!Info0.isEmpty() && !Info1.isEmpty()) {
						// 駅情報取得(駅名、距離)
						StationInfo info0 = dataEditor.shortDistance(Info0);
						StationInfo info1 = dataEditor.shortDistance(Info1);
						// 最寄り駅眼名を取得
						String stationName0 = info0.getStationName();
						String stationName1 = info1.getStationName();
						// 徒歩情報取得
						String walkInfo0 = walkapi.sendURL(departure, stationName0);
						String walkInfo1 = walkapi.sendURL(destination, stationName1);
						// 徒歩情報を加工
						if (!walkInfo0.isEmpty() && !walkInfo1.isEmpty()) {
							ArrayList<WalkInfo> walkinfo0 = jsonEditor.editJsonData2(walkInfo0);
							ArrayList<WalkInfo> walkinfo1 = jsonEditor.editJsonData2(walkInfo1);

							String warkTime0 = walkinfo0.get(0).getWalkTime();
							String walkDistance0 = walkinfo0.get(0).getWalkDistance();
							String warkTime1 = walkinfo1.get(0).getWalkTime();
							String walkDistance1 = walkinfo1.get(0).getWalkDistance();

							ArrayList<TicketInfo> ticketInfo = ticketapi.sendURL(stationName0, stationName1);

							TicketInfo dto = ticketInfo.get(0);
							String distance = dto.getDistance();
							String stations = dto.getStations();
							String via = dto.getVia();
							String fare = dto.getFare();
							String time = dto.getTime();

							model.addAttribute("startStation", stationName0);
							model.addAttribute("walkTime0", warkTime0);
							model.addAttribute("walkDistance0", walkDistance0);
							model.addAttribute("endStation", stationName1);
							model.addAttribute("walkTime1", warkTime1);
							model.addAttribute("walkDistance1", walkDistance1);
							model.addAttribute("distance", distance);
							model.addAttribute("stations", stations);
							model.addAttribute("via", via);
							model.addAttribute("fare", fare);
							model.addAttribute("time", time);

						}
					}
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

		return "home";
	}

}
